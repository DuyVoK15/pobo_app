{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeScreen from \"../home/HomeScreen\";\nimport { COLORS, ROUTES } from \"../constants\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport UserProfile from \"../profile/UserProfile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BottomNavigator() {\n  var Tab = createBottomTabNavigator();\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size,\n            focused = _ref2.focused;\n          var iconName;\n          if (route.name === ROUTES.HOME_TAB) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Map') {\n            iconName = focused ? 'map' : 'map-outline';\n          } else if (route.name === 'Schedule') {\n            iconName = focused ? 'reader' : 'reader-outline';\n          } else if (route.name === 'Chat') {\n            iconName = focused ? 'chatbubble' : 'chatbubble-outline';\n          } else if (route.name === 'UserProfile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 20,\n            color: COLORS.orange50\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        borderTopLeftRadius: 40,\n        borderTopRightRadius: 40\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: ROUTES.HOME_TAB,\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Map\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Schedule\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"UserProfile\",\n      component: UserProfile\n    })]\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","HomeScreen","COLORS","ROUTES","Text","NavigationContainer","Ionicons","UserProfile","jsx","_jsx","jsxs","_jsxs","BottomNavigator","Tab","Navigator","screenOptions","_ref","route","headerShown","tabBarIcon","_ref2","color","size","focused","iconName","name","HOME_TAB","orange50","tabBarOptions","showLabel","style","borderTopLeftRadius","borderTopRightRadius","children","Screen","component"],"sources":["E:/Studying/Term 8/EXE201/PoBo/components/navigation/bottomTabNavigator.js"],"sourcesContent":["import React  from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeScreen from '../home/HomeScreen'\r\nimport {COLORS, ROUTES} from '../constants'\r\n// import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Text } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n// import { Icon } from \"react-native-vector-icons/Icon\";\r\n// import Icon from 'react-native-ionicons'\r\n// import Icon from 'react-native-vector-icons/MaterialIcons'\r\n// import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport UserProfile from \"../profile/UserProfile\";\r\n\r\nexport default function BottomNavigator() {\r\n    \r\n  const Tab = createBottomTabNavigator();\r\n  return (\r\n    // <NavigationContainer>\r\n    <Tab.Navigator\r\n        screenOptions={({route}) => ({\r\n            headerShown : false,\r\n            tabBarIcon: ({color, size, focused})=> {\r\n                let iconName;\r\n                if(route.name === ROUTES.HOME_TAB ){\r\n                    iconName = focused ? 'home' : 'home-outline';\r\n                }\r\n                 else if (route.name === 'Map' ){\r\n                    iconName = focused ? 'map' : 'map-outline';\r\n                }\r\n                else if (route.name === 'Schedule' ){\r\n                    iconName = focused ? 'reader' : 'reader-outline';\r\n                }\r\n                else if (route.name === 'Chat' ){\r\n                    iconName = focused ? 'chatbubble' : 'chatbubble-outline';\r\n                }\r\n                else if (route.name === 'UserProfile' ){\r\n                    iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n\r\n\r\n                return <Ionicons name={iconName} size ={20} color={COLORS.orange50} />\r\n            },\r\n            })}\r\n            tabBarOptions={{\r\n                showLabel: false,\r\n                style: {\r\n                  borderTopLeftRadius: 40,\r\n                  borderTopRightRadius: 40,\r\n                },\r\n              }}\r\n            >\r\n      <Tab.Screen name={ROUTES.HOME_TAB} component={HomeScreen} />\r\n      <Tab.Screen name=\"Map\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Schedule\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Chat\" component={HomeScreen} />\r\n      <Tab.Screen name=\"UserProfile\" component={UserProfile} />\r\n\r\n    </Tab.Navigator>\r\n    // </NavigationContainer>\r\n  );\r\n}\r\n// import React from \"react\";\r\n// import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n// import HomeScreen from '../home/HomeScreen'\r\n// import { ROUTES } from '../constants'\r\n// import { Text } from 'react-native'; // Import the Text component\r\n// import { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\n// const Tab = createBottomTabNavigator();\r\n\r\n// export default function BottomNavigator() {\r\n//   return (\r\n//     <Tab.Navigator\r\n//       screenOptions={({ route }) => ({\r\n//         headerShown: false,\r\n//         tabBarIcon: ({ color, size, focused }) => {\r\n//           let iconName;\r\n//           if (route.name === ROUTES.HOME_TAB) {\r\n//             return focused ? (\r\n//               <Text>home</Text> // Wrap the string with a Text component\r\n//             ) : (\r\n//               <Text>home-outline</Text> // Wrap the string with a Text component\r\n//             );\r\n//           } else if (route.name === 'Map') {\r\n//             return focused ? (\r\n//               <Text>map</Text> // Wrap the string with a Text component\r\n//             ) : (\r\n//               <Text>map-outline</Text> // Wrap the string with a Text component\r\n//             );\r\n//           }\r\n//           else if (route.name === 'Schedule') {\r\n//             return focused ? (\r\n//               <Text>map</Text> // Wrap the string with a Text component\r\n//             ) : (\r\n//               <Text>map-outline</Text> // Wrap the string with a Text component\r\n//             );\r\n//           }\r\n//           else if (route.name === 'Chat') {\r\n//             return focused ? (\r\n//               <Text>map</Text> // Wrap the string with a Text component\r\n//             ) : (\r\n//               <Text>map-outline</Text> // Wrap the string with a Text component\r\n//             );\r\n//           }\r\n//           else if (route.name === 'Info') {\r\n//             return focused ? (\r\n//               <Text>map</Text> // Wrap the string with a Text component\r\n//             ) : (\r\n//               <Text>map-outline</Text> // Wrap the string with a Text component\r\n//             );\r\n//           }\r\n//           // Handle other cases\r\n\r\n//           return (\r\n//             <MaterialIcons name={iconName} size={22} color={color} />\r\n//           );\r\n//         },\r\n//       })}\r\n//     >\r\n//       <Tab.Screen name={ROUTES.HOME_TAB} component={HomeScreen} />\r\n//       <Tab.Screen name=\"Map\" component={HomeScreen} />\r\n//       <Tab.Screen name=\"Schedule\" component={HomeScreen} />\r\n//       <Tab.Screen name=\"Chat\" component={HomeScreen} />\r\n//       <Tab.Screen name=\"Info\" component={HomeScreen} />\r\n//     </Tab.Navigator>\r\n//   );\r\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAO,OAAO;AAC1B,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,UAAU;AACjB,SAAQC,MAAM,EAAEC,MAAM;AAAqB,OAAAC,IAAA;AAG3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAK9D,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAExC,IAAMC,GAAG,GAAGb,wBAAwB,CAAC,CAAC;EACtC,OAEEW,KAAA,CAACE,GAAG,CAACC,SAAS;IACVC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAEC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAO;QACzBC,WAAW,EAAG,KAAK;QACnBC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA2B;UAAA,IAAzBC,KAAK,GAAAD,KAAA,CAALC,KAAK;YAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YAAEC,OAAO,GAAAH,KAAA,CAAPG,OAAO;UAC9B,IAAIC,QAAQ;UACZ,IAAGP,KAAK,CAACQ,IAAI,KAAKtB,MAAM,CAACuB,QAAQ,EAAE;YAC/BF,QAAQ,GAAGD,OAAO,GAAG,MAAM,GAAG,cAAc;UAChD,CAAC,MACK,IAAIN,KAAK,CAACQ,IAAI,KAAK,KAAK,EAAE;YAC5BD,QAAQ,GAAGD,OAAO,GAAG,KAAK,GAAG,aAAa;UAC9C,CAAC,MACI,IAAIN,KAAK,CAACQ,IAAI,KAAK,UAAU,EAAE;YAChCD,QAAQ,GAAGD,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UACpD,CAAC,MACI,IAAIN,KAAK,CAACQ,IAAI,KAAK,MAAM,EAAE;YAC5BD,QAAQ,GAAGD,OAAO,GAAG,YAAY,GAAG,oBAAoB;UAC5D,CAAC,MACI,IAAIN,KAAK,CAACQ,IAAI,KAAK,aAAa,EAAE;YACnCD,QAAQ,GAAGD,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UACpD;UAGA,OAAOd,IAAA,CAACH,QAAQ;YAACmB,IAAI,EAAED,QAAS;YAACF,IAAI,EAAG,EAAG;YAACD,KAAK,EAAEnB,MAAM,CAACyB;UAAS,CAAE,CAAC;QAC1E;MACA,CAAC;IAAA,CAAE;IACHC,aAAa,EAAE;MACXC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;QACLC,mBAAmB,EAAE,EAAE;QACvBC,oBAAoB,EAAE;MACxB;IACF,CAAE;IAAAC,QAAA,GAEVxB,IAAA,CAACI,GAAG,CAACqB,MAAM;MAACT,IAAI,EAAEtB,MAAM,CAACuB,QAAS;MAACS,SAAS,EAAElC;IAAW,CAAE,CAAC,EAC5DQ,IAAA,CAACI,GAAG,CAACqB,MAAM;MAACT,IAAI,EAAC,KAAK;MAACU,SAAS,EAAElC;IAAW,CAAE,CAAC,EAChDQ,IAAA,CAACI,GAAG,CAACqB,MAAM;MAACT,IAAI,EAAC,UAAU;MAACU,SAAS,EAAElC;IAAW,CAAE,CAAC,EACrDQ,IAAA,CAACI,GAAG,CAACqB,MAAM;MAACT,IAAI,EAAC,MAAM;MAACU,SAAS,EAAElC;IAAW,CAAE,CAAC,EACjDQ,IAAA,CAACI,GAAG,CAACqB,MAAM;MAACT,IAAI,EAAC,aAAa;MAACU,SAAS,EAAE5B;IAAY,CAAE,CAAC;EAAA,CAE5C,CAAC;AAGpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}